name: Run Crawler Every 5 Minutes

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/5 * * * *" # 每五分鐘執行一次

jobs:
  postgres-and-crawler:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DEFAULT_DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DEFAULT_DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DEFAULT_DATABASE_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DEFAULT_DATABASE_USER }}"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Print current directory and list files
        run: |
          echo "Current directory: $(pwd)"
          ls -R  # 列出当前目录及子目录下的文件

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 假设依赖在此文件中

      - name: Inject prod env settings with database public host
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "<"
          tokenSuffix: ">"
          files: '["**/apiadmin/.env"]'
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DEFAULT_DATABASE_NAME: ${{ secrets.DEFAULT_DATABASE_NAME }}
          DEFAULT_DATABASE_USER: ${{ secrets.DEFAULT_DATABASE_USER }}
          DEFAULT_DATABASE_PASSWORD: ${{ secrets.DEFAULT_DATABASE_PASSWORD }}
          DEFAULT_DATABASE_HOST: ${{ secrets.DEFAULT_DATABASE_HOST }}
          DEFAULT_DATABASE_PORT: ${{ secrets.DEFAULT_DATABASE_PORT }}
          DEFAULT_DATABASE_URL: ${{ secrets.DEFAULT_DATABASE_URL }}
          DEFAULT_DATABASE_CONN_MAX_AGE: ${{ secrets.DEFAULT_DATABASE_CONN_MAX_AGE }}

      - name: Debug URL access
        run: |
          echo "Testing URL access..."
          curl -v https://apis.youbike.com.tw/json/station-yb1.json  # 替换为你要测试的 URL

          if [ $? -ne 0 ]; then
            echo "Failed to connect to the URL!"
            exit 1
          else
            echo "URL access successful."
          fi

          echo "Testing URL access..."
          curl -v https://apis.youbike.com.tw/json/station-yb1.json  # 替换为你要测试的 URL

          if [ $? -ne 0 ]; then
            echo "Failed to connect to the URL!"
            exit 1
          else
            echo "URL access successful."
          fi
      - name: Set up Django settings for PostgreSQL
        run: |
          echo "DATABASE_URL=${{ secrets.DEFAULT_DATABASE_URL }}" >> $GITHUB_ENV

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ secrets.DEFAULT_DATABASE_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 3
          done

      - name: Run database migrations
        run: |
          python manage.py migrate

      - name: Run crawler script
        run: |
          python adminconfig/utils/crawlers.py
